set nocompatible  " Use Vim settings, rather then Vi settings
filetype off      " required for Vundle

" Specify a directory for plugins
" - For Neovim: ~/.local/share/nvim/plugged
" - Avoid using standard Vim directory names like 'plugin'
call plug#begin('~/.vim/plugged')

Plug 'kchmck/vim-coffee-script'
Plug 'tpope/vim-bundler'
Plug 'tpope/vim-cucumber'
Plug 'tpope/vim-endwise'
Plug 'tpope/vim-fugitive'
Plug 'tpope/vim-git'
Plug 'tpope/vim-haml'
Plug 'tpope/vim-markdown'
Plug 'tpope/vim-rails'
Plug 'tpope/vim-surround'
Plug 'juvenn/mustache.vim'
Plug 'nathanaelkane/vim-indent-guides'
Plug 'ingydotnet/yaml-vim'
Plug 'scrooloose/syntastic'
Plug 'pangloss/vim-javascript'
Plug 'chriskempson/base16-vim'
Plug 'groenewege/vim-less'
Plug 'elzr/vim-json'
Plug 'Valloric/MatchTagAlways'

" Language: Javascript
Plug 'pangloss/vim-javascript'
Plug 'othree/yajs.vim', { 'for': 'javascript' }
Plug 'othree/es.next.syntax.vim'
Plug 'mxw/vim-jsx'
Plug 'posva/vim-vue'
Plug 'Quramy/vim-js-pretty-template'
Plug 'heavenshell/vim-jsdoc'

" Language: Generic
let g:polyglot_disabled = ['crystal', 'javascript', 'jsx', 'vue']
Plug 'sheerun/vim-polyglot'

call plug#end()

" end Plug setup

filetype plugin indent on

set nobackup
set nowritebackup
set history=50
set ruler         " show the cursor position all the time
set showcmd       " display incomplete commands
set incsearch     " do incremental searching
set hlsearch      " hilight search
set laststatus=2  " Always display the status line

" syntax
set tabstop=2
set shiftwidth=2
set expandtab

syntax on
"set t_Co=256
"let base16colorspace=256  " Access colors present in 256 colorspace
set background=dark
"colorscheme solarized
"colorscheme base16-default
colorscheme base16-eighties
set colorcolumn=120

set relativenumber  " enable relative line number

" set filetype to json for .json files
au BufRead,BufNewFile *.json set filetype=json

" mappings
let mapleader=','

" make editing and sourcing your vimrc file easier
nnoremap <Leader>sv :source $MYVIMRC<CR>
nnoremap <Leader>ev :e $MYVIMRC<CR>

nnoremap <Left> :echoe "Use h"<CR>
nnoremap <Right> :echoe "Use l"<CR>
nnoremap <Up> :echoe "Use k"<CR>
nnoremap <Down> :echoe "Use j"<CR>

function! CorrectTestRunner()
  if match(expand('%'), '\.feature$') != -1
    return "cucumber --drb"
  elseif match(expand('%'), '_test\.rb$') != -1
    return "bundle exec rails test"
  elseif match(expand('%'), '_spec\.rb$') != -1
    return "bundle exec rspec --drb --colour"
  endif
endfunction

function! RunTest()
  exec "!" . CorrectTestRunner()
endfunction

function! RunCurrentTest()
  exec "!" . CorrectTestRunner() . " " . expand('%:p')
endfunction

function! RunCurrentLineInTest()
  exec "!" . CorrectTestRunner() . " " . expand('%:p') . ":" . line(".")
endfunction

nnoremap <Leader>rf :call RunTest()<CR>
nnoremap <Leader>rf :call RunCurrentTest()<CR>
nnoremap <Leader>rl :call RunCurrentLineInTest()<CR>

" jasmine
nnoremap <Leader>j :!grunt test_spec --spec=% --forceexit<CR>
nnoremap <Leader>J :!grunt test_spec --spec=test/ --forceexit<CR>

" notes
nnoremap <Leader>n :e ~/notes.md<CR>

function! HtmlEscape()
  silent s/&/\&amp;/eg
  silent s/</\&lt;/eg
  silent s/>/\&gt;/eg
endfunction

function! HtmlUnEscape()
  silent s/&lt;/</eg
  silent s/&gt;/>/eg
  silent s/&amp;/\&/eg
endfunction

" map <silent> <c-h> :call HtmlEscape()<CR>
" map <silent> <c-u> :call HtmlUnEscape()<CR>

" Store swap files in fixed location, not current directory.
set dir=~/.vimswap//,/var/tmp//,/tmp//,.

" Bundle 'scrooloose/syntastic'
" Make syntastic ignore angular properties
let g:syntastic_html_tidy_ignore_errors=[" proprietary attribute \"ng-"]

" Bundle 'elzr/vim-json'
" Disable json concealing
let g:vim_json_syntax_conceal = 0

" Remap command typos
" http://blog.sanctum.geek.nz/vim-command-typos/
if has("user_commands")
  command! -bang -nargs=? -complete=file E e<bang> <args>
  command! -bang -nargs=? -complete=file W w<bang> <args>
  command! -bang -nargs=? -complete=file Wq wq<bang> <args>
  command! -bang -nargs=? -complete=file WQ wq<bang> <args>
  command! -bang Wa wa<bang>
  command! -bang WA wa<bang>
  command! -bang Q q<bang>
  command! -bang QA qa<bang>
  command! -bang Qa qa<bang>
endif
